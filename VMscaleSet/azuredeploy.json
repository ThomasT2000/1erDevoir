{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "String"
    },
    "osDiskType": {
      "type": "String"
    },
    "virtualNetworkId": {
      "type": "String"
    },
    "virtualNetworkName": {
      "type": "String"
    },
    "networkSecurityGroups": {
      "type": "Array"
    },
    "networkInterfaceConfigurations": {
      "type": "Array"
    },
    "vmName": {
      "type": "String"
    },
    "virtualMachineScaleSetName": {
      "type": "String"
    },
    "instanceCount": {
      "type": "String"
    },
    "instanceSize": {
      "type": "String"
    },
    "platformFaultDomainCount": {
      "type": "String"
    },
    "scaleInPolicy": {
      "type": "Object"
    },
    "upgradePolicy": {
      "type": "String"
    },
    "hibernationEnabled": {
      "type": "Bool"
    },
    "adminUsername": {
      "type": "String"
    },
    "adminPassword": {
      "type": "SecureString"
    },
    "vnetLocation": {
      "defaultValue": "canadacentral",
      "type": "String",
      "metadata": {
        "description": "Azure region for the deployment, resource group and resources."
      }
    },
    "vnetExtendedLocation": {
      "defaultValue": {},
      "type": "Object"
    },
    "vnetVirtualNetworkName": {
      "defaultValue": "Vlan",
      "type": "String",
      "metadata": {
        "description": "Name of the virtual network resource."
      }
    },
    "vnetTagsByResource": {
      "defaultValue": {},
      "type": "Object",
      "metadata": {
        "description": "Optional tags for the resources."
      }
    },
    "vnetProperties": {
      "defaultValue": {
        "provisioningState": "Succeeded",
        "resourceGuid": "6aa38750-86e1-4b94-b543-8056f507f814",
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "provisioningState": "Succeeded",
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "provisioningState": "Succeeded",
              "addressPrefix": "10.0.200.0/26",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "snet-canadacentral-1",
            "properties": {
              "addressPrefixes": [
                "10.0.1.0/24"
              ]
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      },
      "type": "Object"
    },
    "vnetNatGatewaysWithNewPublicIpAddress": {
      "defaultValue": [],
      "type": "Array"
    },
    "vnetNatGatewaysWithoutNewPublicIpAddress": {
      "defaultValue": [],
      "type": "Array"
    },
    "vnetNatGatewayPublicIpAddressesNewNames": {
      "defaultValue": [],
      "type": "Array",
      "metadata": {
        "description": "Array of public ip addresses for NAT Gateways."
      }
    },
    "vnetNetworkSecurityGroupsNew": {
      "defaultValue": [],
      "type": "Array",
      "metadata": {
        "description": "Array of NAT Gateway objects for subnets."
      }
    },
    "vnetResourceGroupName": {
      "defaultValue": "Thom_RG",
      "type": "String"
    },
    "vnetDeploymentName": {
      "defaultValue": "network-interface-associated-virtual-network-20241104191856",
      "type": "String"
    }
  },
  "variables": {
    "storageApiVersion": "2021-01-01",
    "networkApiVersion": "2020-11-01",
    "virtualMachineScaleSetApiVersion": "2024-07-01",
    "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "standardSku": {
      "name": "Standard"
    },
    "vnetStaticAllocation": {
      "publicIPAllocationMethod": "Static"
    },
    "vnetPremiumTier": {
      "tier": "Premium"
    },
    "vnetPublicIpAddressesTags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/publicIpAddresses'), parameters('vnetTagsByResource')['Microsoft.Network/publicIpAddresses'], json('{}'))]",
    "vnetNatGatewayTags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/natGateways'), parameters('vnetTagsByResource')['Microsoft.Network/natGateways'], json('{}'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[parameters('networkSecurityGroups')[copyIndex()].name]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroups')[copyIndex()].rules]"
      },
      "copy": {
        "name": "networkSecurityGroups",
        "count": "[length(parameters('networkSecurityGroups'))]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('virtualMachineScaleSetApiVersion')]",
      "name": "[parameters('virtualMachineScaleSetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "networkSecurityGroups"
      ],
      "sku": {
        "name": "[parameters('instanceSize')]",
        "capacity": "[int(parameters('instanceCount'))]"
      },
      "properties": {
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "canonical",
              "offer": "ubuntu-24_04-lts",
              "sku": "server",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkApiVersion": "[variables('networkApiVersion')]",
            "copy": [
              {
                "name": "networkInterfaceConfigurations",
                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                "input": {
                  "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                  "properties": {
                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                    "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                    "ipConfigurations": [
                      {
                        "name": "[concat(take(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, sub(80, length('-defaultIpConfiguration'))), '-defaultIpConfiguration')]",
                        "properties": {
                          "subnet": {
                            "id": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].subnetId]"
                          },
                          "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                          "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                          "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                          "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n
                            ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                        }
                      }
                    ],
                    "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                  }
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": []
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false,
              "patchSettings": {
                "patchMode": "ImageDefault"
              }
            }
          },
          "securityProfile": {}
        },
        "orchestrationMode": "Flexible",
        "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
        "scaleInPolicy": "[parameters('scaleInPolicy')]",
        "upgradePolicy": {
          "mode": "[parameters('upgradePolicy')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[parameters('vnetDeploymentName')]",
      "dependsOn": [
        "natGatewaysWithNewPublicIpAddressCopy",
        "natGatewaysWithoutNewPublicIpAddressCopy",
        "networkSecurityGroupsCopy",
        "natGatewayPublicIpAddressesCopy",
        "natGatewayPublicIpAddressesCopy"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-01-01",
              "name": "[parameters('vnetVirtualNetworkName')]",
              "location": "[parameters('vnetLocation')]",
              "extendedLocation": "[if(empty(parameters('vnetExtendedLocation')), json('null'), parameters('vnetExtendedLocation'))]",
              "tags": "[if(empty(parameters('vnetTagsByResource')), json('{}'), parameters('vnetTagsByResource'))]",
              "properties": "[parameters('vnetProperties')]"
            }
          ]
        }
      },
      "resourceGroup": "[parameters('vnetResourceGroupName')]",
      "copy": {
        "name": "[parameters('vnetDeploymentName')]",
        "count": 1
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "-1",
      "name": "[parameters('vnetNatGatewaysWithoutNewPublicIpAddress')[copyIndex()].name]",
      "location": "[parameters('vnetLocation')]",
      "tags": "[variables('vnetNatGatewayTags')]",
      "sku": "[variables('standardSku')]",
      "properties": "[parameters('vnetNatGatewaysWithoutNewPublicIpAddress')[copyIndex()].properties]",
      "copy": {
        "name": "natGatewaysWithoutNewPublicIpAddressCopy",
        "count": "[length(parameters('vnetNatGatewaysWithoutNewPublicIpAddress'))]"
      },
      "condition": "[greater(length(parameters('vnetNatGatewaysWithoutNewPublicIpAddress')), 0)]"
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "-1",
      "name": "[parameters('vnetNatGatewaysWithNewPublicIpAddress')[copyIndex()].name]",
      "location": "[parameters('vnetLocation')]",
      "dependsOn": [
        "natGatewayPublicIpAddressesCopy"
      ],
      "tags": "[variables('vnetNatGatewayTags')]",
      "sku": "[variables('standardSku')]",
      "properties": "[parameters('vnetNatGatewaysWithNewPublicIpAddress')[copyIndex()].properties]",
      "copy": {
        "name": "natGatewaysWithNewPublicIpAddressCopy",
        "count": "[length(parameters('vnetNatGatewaysWithNewPublicIpAddress'))]"
      },
      "condition": "[greater(length(parameters('vnetNatGatewaysWithNewPublicIpAddress')), 0)]"
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-08-01",
      "name": "[parameters('vnetNatGatewayPublicIpAddressesNewNames')[copyIndex()]]",
      "location": "[parameters('vnetLocation')]",
      "tags": "[variables('vnetPublicIpAddressesTags')]",
      "sku": "[variables('standardSku')]",
      "properties": "[variables('vnetStaticAllocation')]",
      "copy": {
        "name": "natGatewayPublicIpAddressesCopy",
        "count": "[length(parameters('vnetNatGatewayPublicIpAddressesNewNames'))]"
      },
      "condition": "[greater(length(parameters('vnetNatGatewayPublicIpAddressesNewNames')), 0)]"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[parameters('vnetNetworkSecurityGroupsNew')[copyIndex()].name]",
      "location": "[parameters('vnetLocation')]",
      "tags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('vnetTagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}'))]",
      "properties": {},
      "copy": {
        "name": "networkSecurityGroupsCopy",
        "count": "[length(parameters('vnetNetworkSecurityGroupsNew'))]"
      },
      "condition": "[greater(length(parameters('vnetNetworkSecurityGroupsNew')), 0)]"
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    }
  }
}