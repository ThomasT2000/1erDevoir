trigger:
- main  # Ou votre branche spécifique

pool:
  name: 'Agent'  # Utilisation de votre agent auto-hébergé

variables:
  vm1Json: 'VM1.json'
  vm2Json: 'VM2.json'
  webscaltesetJson: 'webscalteset.json'
  keyVaultName: 'AzureKeyVaultConnection'
  adminPasswordSecretName: 'adminPassword'

jobs:
- job: DeployVMs
  displayName: 'Déployer les Machines Virtuelles'
  steps:

    # Étape 1 : Connexion à Azure CLI avec la connexion de service
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureKeyVaultConnection'  # Utilisation de votre connexion de service existante
        scriptType: 'bash'  # Ou 'ps' pour PowerShell
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Connexion à Azure avec le service principal"
          az login --service-principal -u $(azureServicePrincipalClientId) --tenant $(azureTenantId) --password $(azureServicePrincipalSecret)

    # Étape 2 : Déployer les ressources via ARM template
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureKeyVaultConnection'  # Utilisation de la même connexion
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Déploiement des machines virtuelles et des ressources"
          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file $(Build.SourcesDirectory)/$(vm1Json) \
            --parameters adminPassword=$(adminPassword)

          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file $(Build.SourcesDirectory)/$(vm2Json) \
            --parameters adminPassword=$(adminPassword)

          az deployment group create \
            --resource-group $(resourceGroupName) \
            --template-file $(Build.SourcesDirectory)/$(webscaltesetJson)
        
    # Étape 3 : Vérification du déploiement
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureKeyVaultConnection'  # Encore la même connexion
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Vérification du déploiement"
          az vm list -g $(resourceGroupName) --show-details --out table
          az resource show --ids $(webscaltesetId)

    # Étape 4 : Déconnexion d'Azure CLI
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureKeyVaultConnection'  # Connexion de service pour la déconnexion
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Déconnexion d'Azure CLI"
          az logout
